<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">
    <!--导入web-dubbo.xml-->
    <import resource="classpath:web-dubbo.xml"></import>
        <!--将其放在一起 -->
        <dubbo:annotation package="com.ywc.agric" />
        <!--包扫描  有dubbo包扫描可不用 有点疑问了   完成Bean创建和自动依赖注入的功能 -->
        <context:component-scan base-package="com.ywc.agric"/>
    <!--注解驱动-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!--不需要视图解析器，项目中的所有的请求都返回json数据结构-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json"/>
                <property name="features">
                    <list>
                        <!--Map类型格式化，接收参数允许空值
                        User{name, age} => new User('zhangsan') => user{username: 'zhangsan'}
                        WriteMapNullValue
                        User{name, age} => new User('zhangsan') => user{username: 'zhangsan',age:null}
                        -->
                        <value>WriteMapNullValue</value>
                        <!--日期类型格式化  数值15..... 毫秒级的时间戳
                        WriteDateUseDateFormat yyyy-MM-dd hh:mm:ss
                        -->
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--文件上传组件-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--1.最大多少  2.最大缓存-->
        <property name="maxUploadSize" value="104857600" />
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--配置静态资源由DefaultServlet处理-->
    <mvc:default-servlet-handler/>

    <!--  导入security配置  -->
    <import resource="classpath:spring-security.xml"/>





</beans>